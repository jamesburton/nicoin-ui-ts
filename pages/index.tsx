import type { NextPage } from 'next'
import Head from 'next/head'
// import Image from 'next/image'
import styles from '../styles/Home.module.css'
import AddNiCoinButton from 'components/buttons/AddNiCoinButton'
import { useMetamask } from 'use-metamask'
import { ComponentType, useCallback, useEffect, useRef, useState, FunctionComponent, MutableRefObject } from 'react'
import Button from '@mui/material/Button';
import transferNi from 'actions/transferNi';
import SiteFooter from 'components/SiteFooter';

type DisplayAccountProps = {
  showBalance?: boolean;
};
const DisplayAccount:React.FunctionComponent<DisplayAccountProps> = ({ showBalance = false }) => {
  const { getAccounts } = useMetamask();
  const [accounts,setAccounts] = useState<any[]>();
  const loadAccounts = useCallback(async () => {
    var _accounts = await getAccounts();
    setAccounts(_accounts);
  },[getAccounts,setAccounts]);
  useEffect(() => {
    loadAccounts();
  },[loadAccounts]);
  // return <div>[DisplayAccount]</div>
  return <div>
    {/* <pre>{JSON.stringify(accounts,null,2)}</pre> */}
    <strong>Account: </strong>
    {!accounts?.length ? <span>No account connected.</span> : <span>{accounts[0]}</span>}
  </div>
};
//const TransferPanel = () => <h4>[TransferPanel]</h4>;
const TransferPanel:FunctionComponent<{ account:string }> = ({account}) => {
  const toRef = useRef<HTMLInputElement>();
  const amountRef = useRef<HTMLInputElement>();
  const send = useCallback(async () => {
    var to = toRef.current?.value;
    var amount = amountRef.current?.value;
    // alert(JSON.stringify({ to, amount }));
    await transferNi({ to, amount });
  },[toRef,amountRef,transferNi]);
  return <div style={{ border:'1px solid gray', padding: '4px'}}>
    <div>Transfer from <em>{account}</em></div>
    <div>Transfer to <input ref={toRef} placeholder="to address 0x..." /></div>
    <div>Transfer Amount <input ref={amountRef} placeholder="amount e.g. 0.01" /></div>
    <Button onClick={() => { send() }} variant="contained">Send</Button>
  </div>;
};
const ForEachAccount:React.FunctionComponent<{ Component:ComponentType<{ account:any }> }> = ({ Component }) => {
  const { getAccounts } = useMetamask();
  const [accounts,setAccount] = useState<any[]>();
  const loadAccounts = useCallback(async () => {
    var accounts = await getAccounts();
    setAccount(accounts);
  },[]);
  useEffect(() => {
    loadAccounts();
  },[loadAccounts]);
  return <ul style={{ listStyle: 'none' }}>
    {
      !accounts ? <li><em>Please wait, requesting accounts...</em></li> :
      !accounts.length ? <li><em>No accounts found</em></li> :
      accounts.map((account,i) => <li key={i}><Component account={account} /></li>)
    }
  </ul>;
};

const Home: NextPage = () => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to NiCoin UI
        </h1>

        <DisplayAccount showBalance />
        <ForEachAccount Component={TransferPanel} />

        <p className={styles.description}>
          <AddNiCoinButton />
        </p>

        {/* <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div> */}

        <SiteFooter />
      </main>

      {/* <SiteFooter /> */}
    </div>
  )
}

export default Home
